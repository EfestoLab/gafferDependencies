OpenShadingLanguage 1.00
# Compiled by oslc 1.6.9
shader as_scalar_texture
param	float	U	0		%read{2,2} %write{0,0} %derivs %initexpr
param	float	V	0		%read{2,2} %write{1,1} %derivs %initexpr
param	string	Filename	""		%meta{string,widget,"filename"}  %read{2,2} %write{2147483647,-1}
param	string	UWrap	"periodic"		%meta{string,widget,"popup"} %meta{string,options,"default|black|periodic|clamp|mirror"}  %read{2,2} %write{2147483647,-1}
param	string	VWrap	"periodic"		%meta{string,widget,"popup"} %meta{string,options,"default|black|periodic|clamp|mirror"}  %read{2,2} %write{2147483647,-1}
param	string	Filter	"smartcubic"		%meta{string,widget,"popup"} %meta{string,options,"smartcubic|cubic|linear|closest"} %meta{int,divider,1}  %read{2147483647,-1} %write{2147483647,-1}
param	float	UWidth	1		%read{2,2} %write{2147483647,-1}
param	float	VWidth	1		%read{2,2} %write{2147483647,-1}
param	float	UBlur	0		%read{2,2} %write{2147483647,-1}
param	float	VBlur	0		%meta{int,divider,1}  %read{2,2} %write{2147483647,-1}
param	int	Channel	0		%read{2,2} %write{2147483647,-1}
param	int	Invert	0		%meta{string,help,"invert"} %meta{string,widget,"checkBox"}  %read{3,3} %write{2147483647,-1}
oparam	float	FloatOut	0		%read{2147483647,-1} %write{5,6}
global	float	u	%read{0,0} %write{2147483647,-1} %derivs
global	float	v	%read{1,1} %write{2147483647,-1} %derivs
local	color	c	%read{4,6} %write{2,2}
const	string	$const1	"swidth"		%read{2,2} %write{2147483647,-1}
const	string	$const2	"twidth"		%read{2,2} %write{2147483647,-1}
const	string	$const3	"sblur"		%read{2,2} %write{2147483647,-1}
const	string	$const4	"tblur"		%read{2,2} %write{2147483647,-1}
const	string	$const5	"swrap"		%read{2,2} %write{2147483647,-1}
const	string	$const6	"twrap"		%read{2,2} %write{2147483647,-1}
const	string	$const7	"firstchannel"		%read{2,2} %write{2147483647,-1}
const	float	$const8	1		%read{5,5} %write{2147483647,-1}
const	int	$const9	0		%read{4,6} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{4,4}
code U
# ./texture2d/as_scalar_texture.osl:31
#     float        U = u,
	assign		U u 	%filename{"./texture2d/as_scalar_texture.osl"} %line{31} %argrw{"wr"}
code V
# ./texture2d/as_scalar_texture.osl:32
#     float        V = v,
	assign		V v 	%filename{"./texture2d/as_scalar_texture.osl"} %line{32} %argrw{"wr"}
code ___main___
# ./texture2d/as_scalar_texture.osl:79
#         "firstchannel", Channel);
	texture		c Filename U V $const1 UWidth $const2 VWidth $const3 UBlur $const4 VBlur $const5 UWrap $const6 VWrap $const7 Channel 	%filename{"./texture2d/as_scalar_texture.osl"} %line{79} %argrw{"wrrrrrrrrrrrrrrrrr"} %argderivs{2,3}
# ./texture2d/as_scalar_texture.osl:81
#     if (Invert)
	if		Invert 6 7 	%line{81} %argrw{"r"}
# ./texture2d/as_scalar_texture.osl:82
#         FloatOut = 1.0 - c[0];
	compref		$tmp1 c $const9 	%line{82} %argrw{"wrr"}
	sub		FloatOut $const8 $tmp1 	%argrw{"wrr"}
# ./texture2d/as_scalar_texture.osl:84
#         FloatOut = c[0];
	compref		FloatOut c $const9 	%line{84} %argrw{"wrr"}
	end
