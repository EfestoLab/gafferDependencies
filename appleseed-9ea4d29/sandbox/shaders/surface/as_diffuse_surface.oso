OpenShadingLanguage 1.00
# Compiled by oslc 1.6.4dev
shader as_diffuse_surface	%meta{string,help,"Diffuse surface shader"} 
param	vector	Normal	0 0 0		%read{3,6} %write{0,0} %initexpr
param	float	Diffuse	0.80000001		%meta{string,help,"Reflectivity"} %meta{float,min,0} %meta{float,max,1}  %read{4,7} %write{2147483647,-1}
param	color	Color	1 1 1		%meta{string,help,"Color"}  %read{4,7} %write{2147483647,-1}
param	float	Roughness	0		%meta{string,help,"Surface roughness."}  %read{1,3} %write{2147483647,-1}
oparam	closure color	BRDF			%read{2147483647,-1} %write{5,8}
global	normal	N	%read{0,0} %write{2147483647,-1}
const	float	$const1	0		%read{1,1} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
temp	closure color	$tmp2	%read{5,5} %write{3,3}
const	string	$const2	"oren_nayar"		%read{3,3} %write{2147483647,-1}
temp	color	$tmp3	%read{5,5} %write{4,4}
temp	closure color	$tmp4	%read{8,8} %write{6,6}
const	string	$const3	"diffuse"		%read{6,6} %write{2147483647,-1}
temp	color	$tmp5	%read{8,8} %write{7,7}
code Normal
# as_diffuse_surface.osl:36
#     vector Normal = N,
	assign		Normal N 	%filename{"as_diffuse_surface.osl"} %line{36} %argrw{"wr"}
code ___main___
# as_diffuse_surface.osl:54
#     if (Roughness != 0.0)
	neq		$tmp1 Roughness $const1 	%filename{"as_diffuse_surface.osl"} %line{54} %argrw{"wrr"}
	if		$tmp1 6 9 	%argrw{"r"}
# as_diffuse_surface.osl:55
#         BRDF = Diffuse * Color * oren_nayar(Normal, Roughness);
	closure		$tmp2 $const2 Normal Roughness 	%line{55} %argrw{"wrrr"}
	mul		$tmp3 Diffuse Color 	%argrw{"wrr"}
	mul		BRDF $tmp2 $tmp3 	%argrw{"wrr"}
# as_diffuse_surface.osl:57
#         BRDF = Diffuse * Color * diffuse(Normal);
	closure		$tmp4 $const3 Normal 	%line{57} %argrw{"wrr"}
	mul		$tmp5 Diffuse Color 	%argrw{"wrr"}
	mul		BRDF $tmp4 $tmp5 	%argrw{"wrr"}
	end
